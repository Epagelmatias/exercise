version: "3.8"
services:
  api:
    container_name: node_assignment
    restart: always
    build: .
    ports:
      - "3000:3000"
    #depend on pg_isready and not container up
    #when container is up postgres may not be ready
    depends_on:
      postgres_db:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres_db:
    container_name: postgres_db
    image: postgres
    ports:
      - "5433:${DB_PORT}"
    volumes:
      - data:/data/db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U ${DB_USER}"]
      interval: 3s
      timeout: 3s
      retries: 3

  frontend:
    container_name: frontend
    stdin_open: true
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3001:3001"
    build:
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  data: {}
